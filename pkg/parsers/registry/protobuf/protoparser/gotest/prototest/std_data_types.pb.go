// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.22.5
// source: transfer_manager/go/pkg/parsers/registry/protobuf/protoparser/gotest/prototest/std_data_types.proto

package prototest

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EmbeddedEnum int32

const (
	EmbeddedEnum_ITEM_1 EmbeddedEnum = 0
	EmbeddedEnum_ITEM_2 EmbeddedEnum = 1
)

// Enum value maps for EmbeddedEnum.
var (
	EmbeddedEnum_name = map[int32]string{
		0: "ITEM_1",
		1: "ITEM_2",
	}
	EmbeddedEnum_value = map[string]int32{
		"ITEM_1": 0,
		"ITEM_2": 1,
	}
)

func (x EmbeddedEnum) Enum() *EmbeddedEnum {
	p := new(EmbeddedEnum)
	*p = x
	return p
}

func (x EmbeddedEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EmbeddedEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_transfer_manager_go_pkg_parsers_registry_protobuf_protoparser_gotest_prototest_std_data_types_proto_enumTypes[0].Descriptor()
}

func (EmbeddedEnum) Type() protoreflect.EnumType {
	return &file_transfer_manager_go_pkg_parsers_registry_protobuf_protoparser_gotest_prototest_std_data_types_proto_enumTypes[0]
}

func (x EmbeddedEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EmbeddedEnum.Descriptor instead.
func (EmbeddedEnum) EnumDescriptor() ([]byte, []int) {
	return file_transfer_manager_go_pkg_parsers_registry_protobuf_protoparser_gotest_prototest_std_data_types_proto_rawDescGZIP(), []int{0}
}

type StdDataTypesMsgList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*StdDataTypesMsg `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *StdDataTypesMsgList) Reset() {
	*x = StdDataTypesMsgList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transfer_manager_go_pkg_parsers_registry_protobuf_protoparser_gotest_prototest_std_data_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StdDataTypesMsgList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StdDataTypesMsgList) ProtoMessage() {}

func (x *StdDataTypesMsgList) ProtoReflect() protoreflect.Message {
	mi := &file_transfer_manager_go_pkg_parsers_registry_protobuf_protoparser_gotest_prototest_std_data_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StdDataTypesMsgList.ProtoReflect.Descriptor instead.
func (*StdDataTypesMsgList) Descriptor() ([]byte, []int) {
	return file_transfer_manager_go_pkg_parsers_registry_protobuf_protoparser_gotest_prototest_std_data_types_proto_rawDescGZIP(), []int{0}
}

func (x *StdDataTypesMsgList) GetItems() []*StdDataTypesMsg {
	if x != nil {
		return x.Items
	}
	return nil
}

type StdDataTypesMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DoubleField   float64          `protobuf:"fixed64,1,opt,name=doubleField,proto3" json:"doubleField,omitempty"`
	FloatField    float32          `protobuf:"fixed32,2,opt,name=floatField,proto3" json:"floatField,omitempty"`
	Int32Field    int32            `protobuf:"varint,3,opt,name=int32Field,proto3" json:"int32Field,omitempty"`
	Int64Field    int64            `protobuf:"varint,4,opt,name=int64Field,proto3" json:"int64Field,omitempty"`
	Uint32Field   uint32           `protobuf:"varint,5,opt,name=uint32Field,proto3" json:"uint32Field,omitempty"`
	Uint64Field   uint64           `protobuf:"varint,6,opt,name=uint64Field,proto3" json:"uint64Field,omitempty"`
	Sint32Field   int32            `protobuf:"zigzag32,7,opt,name=sint32Field,proto3" json:"sint32Field,omitempty"`
	Sint64Field   int64            `protobuf:"zigzag64,8,opt,name=sint64Field,proto3" json:"sint64Field,omitempty"`
	Fixed32Field  uint32           `protobuf:"fixed32,9,opt,name=fixed32Field,proto3" json:"fixed32Field,omitempty"`
	Fixed64Field  uint64           `protobuf:"fixed64,10,opt,name=fixed64Field,proto3" json:"fixed64Field,omitempty"`
	Sfixed32Field int32            `protobuf:"fixed32,11,opt,name=sfixed32Field,proto3" json:"sfixed32Field,omitempty"`
	Sfixed64Field int64            `protobuf:"fixed64,12,opt,name=sfixed64Field,proto3" json:"sfixed64Field,omitempty"`
	BoolField     bool             `protobuf:"varint,13,opt,name=boolField,proto3" json:"boolField,omitempty"`
	StringField   string           `protobuf:"bytes,14,opt,name=stringField,proto3" json:"stringField,omitempty"`
	BytesField    []byte           `protobuf:"bytes,15,opt,name=bytesField,proto3" json:"bytesField,omitempty"`
	MapField      map[string]int32 `protobuf:"bytes,16,rep,name=mapField,proto3" json:"mapField,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	RepeatedField []string         `protobuf:"bytes,17,rep,name=repeatedField,proto3" json:"repeatedField,omitempty"`
	MsgField      *EmbeddedMsg     `protobuf:"bytes,18,opt,name=msgField,proto3" json:"msgField,omitempty"`
	StructField   *structpb.Struct `protobuf:"bytes,19,opt,name=structField,proto3,oneof" json:"structField,omitempty"`
	One           *OneOfs          `protobuf:"bytes,20,opt,name=one,proto3" json:"one,omitempty"`
}

func (x *StdDataTypesMsg) Reset() {
	*x = StdDataTypesMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transfer_manager_go_pkg_parsers_registry_protobuf_protoparser_gotest_prototest_std_data_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StdDataTypesMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StdDataTypesMsg) ProtoMessage() {}

func (x *StdDataTypesMsg) ProtoReflect() protoreflect.Message {
	mi := &file_transfer_manager_go_pkg_parsers_registry_protobuf_protoparser_gotest_prototest_std_data_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StdDataTypesMsg.ProtoReflect.Descriptor instead.
func (*StdDataTypesMsg) Descriptor() ([]byte, []int) {
	return file_transfer_manager_go_pkg_parsers_registry_protobuf_protoparser_gotest_prototest_std_data_types_proto_rawDescGZIP(), []int{1}
}

func (x *StdDataTypesMsg) GetDoubleField() float64 {
	if x != nil {
		return x.DoubleField
	}
	return 0
}

func (x *StdDataTypesMsg) GetFloatField() float32 {
	if x != nil {
		return x.FloatField
	}
	return 0
}

func (x *StdDataTypesMsg) GetInt32Field() int32 {
	if x != nil {
		return x.Int32Field
	}
	return 0
}

func (x *StdDataTypesMsg) GetInt64Field() int64 {
	if x != nil {
		return x.Int64Field
	}
	return 0
}

func (x *StdDataTypesMsg) GetUint32Field() uint32 {
	if x != nil {
		return x.Uint32Field
	}
	return 0
}

func (x *StdDataTypesMsg) GetUint64Field() uint64 {
	if x != nil {
		return x.Uint64Field
	}
	return 0
}

func (x *StdDataTypesMsg) GetSint32Field() int32 {
	if x != nil {
		return x.Sint32Field
	}
	return 0
}

func (x *StdDataTypesMsg) GetSint64Field() int64 {
	if x != nil {
		return x.Sint64Field
	}
	return 0
}

func (x *StdDataTypesMsg) GetFixed32Field() uint32 {
	if x != nil {
		return x.Fixed32Field
	}
	return 0
}

func (x *StdDataTypesMsg) GetFixed64Field() uint64 {
	if x != nil {
		return x.Fixed64Field
	}
	return 0
}

func (x *StdDataTypesMsg) GetSfixed32Field() int32 {
	if x != nil {
		return x.Sfixed32Field
	}
	return 0
}

func (x *StdDataTypesMsg) GetSfixed64Field() int64 {
	if x != nil {
		return x.Sfixed64Field
	}
	return 0
}

func (x *StdDataTypesMsg) GetBoolField() bool {
	if x != nil {
		return x.BoolField
	}
	return false
}

func (x *StdDataTypesMsg) GetStringField() string {
	if x != nil {
		return x.StringField
	}
	return ""
}

func (x *StdDataTypesMsg) GetBytesField() []byte {
	if x != nil {
		return x.BytesField
	}
	return nil
}

func (x *StdDataTypesMsg) GetMapField() map[string]int32 {
	if x != nil {
		return x.MapField
	}
	return nil
}

func (x *StdDataTypesMsg) GetRepeatedField() []string {
	if x != nil {
		return x.RepeatedField
	}
	return nil
}

func (x *StdDataTypesMsg) GetMsgField() *EmbeddedMsg {
	if x != nil {
		return x.MsgField
	}
	return nil
}

func (x *StdDataTypesMsg) GetStructField() *structpb.Struct {
	if x != nil {
		return x.StructField
	}
	return nil
}

func (x *StdDataTypesMsg) GetOne() *OneOfs {
	if x != nil {
		return x.One
	}
	return nil
}

type EmbeddedMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StringField string       `protobuf:"bytes,1,opt,name=stringField,proto3" json:"stringField,omitempty"`
	Int32Field  int32        `protobuf:"varint,2,opt,name=int32Field,proto3" json:"int32Field,omitempty"`
	EnumField   EmbeddedEnum `protobuf:"varint,3,opt,name=enumField,proto3,enum=EmbeddedEnum" json:"enumField,omitempty"`
}

func (x *EmbeddedMsg) Reset() {
	*x = EmbeddedMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transfer_manager_go_pkg_parsers_registry_protobuf_protoparser_gotest_prototest_std_data_types_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmbeddedMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmbeddedMsg) ProtoMessage() {}

func (x *EmbeddedMsg) ProtoReflect() protoreflect.Message {
	mi := &file_transfer_manager_go_pkg_parsers_registry_protobuf_protoparser_gotest_prototest_std_data_types_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmbeddedMsg.ProtoReflect.Descriptor instead.
func (*EmbeddedMsg) Descriptor() ([]byte, []int) {
	return file_transfer_manager_go_pkg_parsers_registry_protobuf_protoparser_gotest_prototest_std_data_types_proto_rawDescGZIP(), []int{2}
}

func (x *EmbeddedMsg) GetStringField() string {
	if x != nil {
		return x.StringField
	}
	return ""
}

func (x *EmbeddedMsg) GetInt32Field() int32 {
	if x != nil {
		return x.Int32Field
	}
	return 0
}

func (x *EmbeddedMsg) GetEnumField() EmbeddedEnum {
	if x != nil {
		return x.EnumField
	}
	return EmbeddedEnum_ITEM_1
}

type OneOfs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to One:
	//
	//	*OneOfs_DoubleField
	//	*OneOfs_FloatField
	//	*OneOfs_Int32Field
	//	*OneOfs_Int64Field
	//	*OneOfs_Uint32Field
	//	*OneOfs_Uint64Field
	//	*OneOfs_Sint32Field
	//	*OneOfs_Sint64Field
	//	*OneOfs_Fixed32Field
	//	*OneOfs_Fixed64Field
	//	*OneOfs_Sfixed32Field
	//	*OneOfs_Sfixed64Field
	//	*OneOfs_BoolField
	//	*OneOfs_StringField
	//	*OneOfs_BytesField
	//	*OneOfs_MsgField
	//	*OneOfs_StructField
	One isOneOfs_One `protobuf_oneof:"one"`
}

func (x *OneOfs) Reset() {
	*x = OneOfs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transfer_manager_go_pkg_parsers_registry_protobuf_protoparser_gotest_prototest_std_data_types_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OneOfs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OneOfs) ProtoMessage() {}

func (x *OneOfs) ProtoReflect() protoreflect.Message {
	mi := &file_transfer_manager_go_pkg_parsers_registry_protobuf_protoparser_gotest_prototest_std_data_types_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OneOfs.ProtoReflect.Descriptor instead.
func (*OneOfs) Descriptor() ([]byte, []int) {
	return file_transfer_manager_go_pkg_parsers_registry_protobuf_protoparser_gotest_prototest_std_data_types_proto_rawDescGZIP(), []int{3}
}

func (m *OneOfs) GetOne() isOneOfs_One {
	if m != nil {
		return m.One
	}
	return nil
}

func (x *OneOfs) GetDoubleField() float64 {
	if x, ok := x.GetOne().(*OneOfs_DoubleField); ok {
		return x.DoubleField
	}
	return 0
}

func (x *OneOfs) GetFloatField() float32 {
	if x, ok := x.GetOne().(*OneOfs_FloatField); ok {
		return x.FloatField
	}
	return 0
}

func (x *OneOfs) GetInt32Field() int32 {
	if x, ok := x.GetOne().(*OneOfs_Int32Field); ok {
		return x.Int32Field
	}
	return 0
}

func (x *OneOfs) GetInt64Field() int64 {
	if x, ok := x.GetOne().(*OneOfs_Int64Field); ok {
		return x.Int64Field
	}
	return 0
}

func (x *OneOfs) GetUint32Field() uint32 {
	if x, ok := x.GetOne().(*OneOfs_Uint32Field); ok {
		return x.Uint32Field
	}
	return 0
}

func (x *OneOfs) GetUint64Field() uint64 {
	if x, ok := x.GetOne().(*OneOfs_Uint64Field); ok {
		return x.Uint64Field
	}
	return 0
}

func (x *OneOfs) GetSint32Field() int32 {
	if x, ok := x.GetOne().(*OneOfs_Sint32Field); ok {
		return x.Sint32Field
	}
	return 0
}

func (x *OneOfs) GetSint64Field() int64 {
	if x, ok := x.GetOne().(*OneOfs_Sint64Field); ok {
		return x.Sint64Field
	}
	return 0
}

func (x *OneOfs) GetFixed32Field() uint32 {
	if x, ok := x.GetOne().(*OneOfs_Fixed32Field); ok {
		return x.Fixed32Field
	}
	return 0
}

func (x *OneOfs) GetFixed64Field() uint64 {
	if x, ok := x.GetOne().(*OneOfs_Fixed64Field); ok {
		return x.Fixed64Field
	}
	return 0
}

func (x *OneOfs) GetSfixed32Field() int32 {
	if x, ok := x.GetOne().(*OneOfs_Sfixed32Field); ok {
		return x.Sfixed32Field
	}
	return 0
}

func (x *OneOfs) GetSfixed64Field() int64 {
	if x, ok := x.GetOne().(*OneOfs_Sfixed64Field); ok {
		return x.Sfixed64Field
	}
	return 0
}

func (x *OneOfs) GetBoolField() bool {
	if x, ok := x.GetOne().(*OneOfs_BoolField); ok {
		return x.BoolField
	}
	return false
}

func (x *OneOfs) GetStringField() string {
	if x, ok := x.GetOne().(*OneOfs_StringField); ok {
		return x.StringField
	}
	return ""
}

func (x *OneOfs) GetBytesField() []byte {
	if x, ok := x.GetOne().(*OneOfs_BytesField); ok {
		return x.BytesField
	}
	return nil
}

func (x *OneOfs) GetMsgField() *EmbeddedMsg {
	if x, ok := x.GetOne().(*OneOfs_MsgField); ok {
		return x.MsgField
	}
	return nil
}

func (x *OneOfs) GetStructField() *structpb.Struct {
	if x, ok := x.GetOne().(*OneOfs_StructField); ok {
		return x.StructField
	}
	return nil
}

type isOneOfs_One interface {
	isOneOfs_One()
}

type OneOfs_DoubleField struct {
	DoubleField float64 `protobuf:"fixed64,1,opt,name=doubleField,proto3,oneof"`
}

type OneOfs_FloatField struct {
	FloatField float32 `protobuf:"fixed32,2,opt,name=floatField,proto3,oneof"`
}

type OneOfs_Int32Field struct {
	Int32Field int32 `protobuf:"varint,3,opt,name=int32Field,proto3,oneof"`
}

type OneOfs_Int64Field struct {
	Int64Field int64 `protobuf:"varint,4,opt,name=int64Field,proto3,oneof"`
}

type OneOfs_Uint32Field struct {
	Uint32Field uint32 `protobuf:"varint,5,opt,name=uint32Field,proto3,oneof"`
}

type OneOfs_Uint64Field struct {
	Uint64Field uint64 `protobuf:"varint,6,opt,name=uint64Field,proto3,oneof"`
}

type OneOfs_Sint32Field struct {
	Sint32Field int32 `protobuf:"zigzag32,7,opt,name=sint32Field,proto3,oneof"`
}

type OneOfs_Sint64Field struct {
	Sint64Field int64 `protobuf:"zigzag64,8,opt,name=sint64Field,proto3,oneof"`
}

type OneOfs_Fixed32Field struct {
	Fixed32Field uint32 `protobuf:"fixed32,9,opt,name=fixed32Field,proto3,oneof"`
}

type OneOfs_Fixed64Field struct {
	Fixed64Field uint64 `protobuf:"fixed64,10,opt,name=fixed64Field,proto3,oneof"`
}

type OneOfs_Sfixed32Field struct {
	Sfixed32Field int32 `protobuf:"fixed32,11,opt,name=sfixed32Field,proto3,oneof"`
}

type OneOfs_Sfixed64Field struct {
	Sfixed64Field int64 `protobuf:"fixed64,12,opt,name=sfixed64Field,proto3,oneof"`
}

type OneOfs_BoolField struct {
	BoolField bool `protobuf:"varint,13,opt,name=boolField,proto3,oneof"`
}

type OneOfs_StringField struct {
	StringField string `protobuf:"bytes,14,opt,name=stringField,proto3,oneof"`
}

type OneOfs_BytesField struct {
	BytesField []byte `protobuf:"bytes,15,opt,name=bytesField,proto3,oneof"`
}

type OneOfs_MsgField struct {
	MsgField *EmbeddedMsg `protobuf:"bytes,16,opt,name=msgField,proto3,oneof"`
}

type OneOfs_StructField struct {
	StructField *structpb.Struct `protobuf:"bytes,17,opt,name=structField,proto3,oneof"`
}

func (*OneOfs_DoubleField) isOneOfs_One() {}

func (*OneOfs_FloatField) isOneOfs_One() {}

func (*OneOfs_Int32Field) isOneOfs_One() {}

func (*OneOfs_Int64Field) isOneOfs_One() {}

func (*OneOfs_Uint32Field) isOneOfs_One() {}

func (*OneOfs_Uint64Field) isOneOfs_One() {}

func (*OneOfs_Sint32Field) isOneOfs_One() {}

func (*OneOfs_Sint64Field) isOneOfs_One() {}

func (*OneOfs_Fixed32Field) isOneOfs_One() {}

func (*OneOfs_Fixed64Field) isOneOfs_One() {}

func (*OneOfs_Sfixed32Field) isOneOfs_One() {}

func (*OneOfs_Sfixed64Field) isOneOfs_One() {}

func (*OneOfs_BoolField) isOneOfs_One() {}

func (*OneOfs_StringField) isOneOfs_One() {}

func (*OneOfs_BytesField) isOneOfs_One() {}

func (*OneOfs_MsgField) isOneOfs_One() {}

func (*OneOfs_StructField) isOneOfs_One() {}

var File_transfer_manager_go_pkg_parsers_registry_protobuf_protoparser_gotest_prototest_std_data_types_proto protoreflect.FileDescriptor

var file_transfer_manager_go_pkg_parsers_registry_protobuf_protoparser_gotest_prototest_std_data_types_proto_rawDesc = []byte{
	0x0a, 0x63, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72,
	0x73, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x2f,
	0x67, 0x6f, 0x74, 0x65, 0x73, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x74, 0x65, 0x73, 0x74,
	0x2f, 0x73, 0x74, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x3d, 0x0a, 0x13, 0x53, 0x74, 0x64, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x4d, 0x73, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x53, 0x74, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x73, 0x4d, 0x73, 0x67, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x22, 0xc3, 0x06, 0x0a, 0x0f, 0x53, 0x74, 0x64, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x4d, 0x73, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x64, 0x6f, 0x75,
	0x62, 0x6c, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x6c, 0x6f, 0x61,
	0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x66, 0x6c,
	0x6f, 0x61, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x33,
	0x32, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x6e,
	0x74, 0x33, 0x32, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x36,
	0x34, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x69, 0x6e,
	0x74, 0x36, 0x34, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x69, 0x6e, 0x74,
	0x33, 0x32, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x75,
	0x69, 0x6e, 0x74, 0x33, 0x32, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x69,
	0x6e, 0x74, 0x36, 0x34, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x73, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x11, 0x52, 0x0b, 0x73, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x73, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x12, 0x52, 0x0b, 0x73, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x12, 0x22, 0x0a, 0x0c, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x07, 0x52, 0x0c, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0c, 0x66, 0x69, 0x78, 0x65,
	0x64, 0x36, 0x34, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x66, 0x69, 0x78,
	0x65, 0x64, 0x33, 0x32, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0f, 0x52,
	0x0d, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x24,
	0x0a, 0x0d, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x10, 0x52, 0x0d, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6f, 0x6f, 0x6c, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6c, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x79, 0x74, 0x65, 0x73, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x62, 0x79, 0x74, 0x65, 0x73, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x12, 0x3a, 0x0a, 0x08, 0x6d, 0x61, 0x70, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x53, 0x74, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x61, 0x70, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x61, 0x70, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x18, 0x11, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x28, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64,
	0x64, 0x65, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x08, 0x6d, 0x73, 0x67, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x12, 0x3e, 0x0a, 0x0b, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x48, 0x00,
	0x52, 0x0b, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x19, 0x0a, 0x03, 0x6f, 0x6e, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e,
	0x4f, 0x6e, 0x65, 0x4f, 0x66, 0x73, 0x52, 0x03, 0x6f, 0x6e, 0x65, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d,
	0x61, 0x70, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x22, 0x7c, 0x0a, 0x0b, 0x45, 0x6d, 0x62, 0x65,
	0x64, 0x64, 0x65, 0x64, 0x4d, 0x73, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x74,
	0x33, 0x32, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69,
	0x6e, 0x74, 0x33, 0x32, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x2b, 0x0a, 0x09, 0x65, 0x6e, 0x75,
	0x6d, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x45,
	0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x09, 0x65, 0x6e, 0x75,
	0x6d, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x22, 0x94, 0x05, 0x0a, 0x06, 0x4f, 0x6e, 0x65, 0x4f, 0x66,
	0x73, 0x12, 0x22, 0x0a, 0x0b, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x20, 0x0a, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x6c, 0x6f,
	0x61, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x20, 0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x33, 0x32,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0a, 0x69,
	0x6e, 0x74, 0x33, 0x32, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x20, 0x0a, 0x0a, 0x69, 0x6e, 0x74,
	0x36, 0x34, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52,
	0x0a, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x22, 0x0a, 0x0b, 0x75,
	0x69, 0x6e, 0x74, 0x33, 0x32, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x48, 0x00, 0x52, 0x0b, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12,
	0x22, 0x0a, 0x0b, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x0b, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x12, 0x22, 0x0a, 0x0b, 0x73, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x11, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x69, 0x6e, 0x74,
	0x33, 0x32, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x22, 0x0a, 0x0b, 0x73, 0x69, 0x6e, 0x74, 0x36,
	0x34, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x12, 0x48, 0x00, 0x52, 0x0b,
	0x73, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x24, 0x0a, 0x0c, 0x66,
	0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x07, 0x48, 0x00, 0x52, 0x0c, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x12, 0x24, 0x0a, 0x0c, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x06, 0x48, 0x00, 0x52, 0x0c, 0x66, 0x69, 0x78, 0x65, 0x64,
	0x36, 0x34, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x26, 0x0a, 0x0d, 0x73, 0x66, 0x69, 0x78, 0x65,
	0x64, 0x33, 0x32, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0f, 0x48, 0x00,
	0x52, 0x0d, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12,
	0x26, 0x0a, 0x0d, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x10, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64,
	0x36, 0x34, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1e, 0x0a, 0x09, 0x62, 0x6f, 0x6f, 0x6c, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x09, 0x62, 0x6f,
	0x6f, 0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x22, 0x0a, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x20, 0x0a, 0x0a, 0x62,
	0x79, 0x74, 0x65, 0x73, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0c, 0x48,
	0x00, 0x52, 0x0a, 0x62, 0x79, 0x74, 0x65, 0x73, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x2a, 0x0a,
	0x08, 0x6d, 0x73, 0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x4d, 0x73, 0x67, 0x48, 0x00, 0x52,
	0x08, 0x6d, 0x73, 0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x42, 0x05, 0x0a, 0x03, 0x6f, 0x6e, 0x65, 0x2a, 0x26, 0x0a,
	0x0c, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x0a, 0x0a,
	0x06, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x31, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x49, 0x54, 0x45,
	0x4d, 0x5f, 0x32, 0x10, 0x01, 0x42, 0x61, 0x5a, 0x5f, 0x61, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65,
	0x78, 0x2d, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x72, 0x75, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x2f, 0x67, 0x6f, 0x74, 0x65, 0x73, 0x74, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x74, 0x65, 0x73, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_transfer_manager_go_pkg_parsers_registry_protobuf_protoparser_gotest_prototest_std_data_types_proto_rawDescOnce sync.Once
	file_transfer_manager_go_pkg_parsers_registry_protobuf_protoparser_gotest_prototest_std_data_types_proto_rawDescData = file_transfer_manager_go_pkg_parsers_registry_protobuf_protoparser_gotest_prototest_std_data_types_proto_rawDesc
)

func file_transfer_manager_go_pkg_parsers_registry_protobuf_protoparser_gotest_prototest_std_data_types_proto_rawDescGZIP() []byte {
	file_transfer_manager_go_pkg_parsers_registry_protobuf_protoparser_gotest_prototest_std_data_types_proto_rawDescOnce.Do(func() {
		file_transfer_manager_go_pkg_parsers_registry_protobuf_protoparser_gotest_prototest_std_data_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_transfer_manager_go_pkg_parsers_registry_protobuf_protoparser_gotest_prototest_std_data_types_proto_rawDescData)
	})
	return file_transfer_manager_go_pkg_parsers_registry_protobuf_protoparser_gotest_prototest_std_data_types_proto_rawDescData
}

var file_transfer_manager_go_pkg_parsers_registry_protobuf_protoparser_gotest_prototest_std_data_types_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_transfer_manager_go_pkg_parsers_registry_protobuf_protoparser_gotest_prototest_std_data_types_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_transfer_manager_go_pkg_parsers_registry_protobuf_protoparser_gotest_prototest_std_data_types_proto_goTypes = []interface{}{
	(EmbeddedEnum)(0),           // 0: EmbeddedEnum
	(*StdDataTypesMsgList)(nil), // 1: StdDataTypesMsgList
	(*StdDataTypesMsg)(nil),     // 2: StdDataTypesMsg
	(*EmbeddedMsg)(nil),         // 3: EmbeddedMsg
	(*OneOfs)(nil),              // 4: OneOfs
	nil,                         // 5: StdDataTypesMsg.MapFieldEntry
	(*structpb.Struct)(nil),     // 6: google.protobuf.Struct
}
var file_transfer_manager_go_pkg_parsers_registry_protobuf_protoparser_gotest_prototest_std_data_types_proto_depIdxs = []int32{
	2, // 0: StdDataTypesMsgList.items:type_name -> StdDataTypesMsg
	5, // 1: StdDataTypesMsg.mapField:type_name -> StdDataTypesMsg.MapFieldEntry
	3, // 2: StdDataTypesMsg.msgField:type_name -> EmbeddedMsg
	6, // 3: StdDataTypesMsg.structField:type_name -> google.protobuf.Struct
	4, // 4: StdDataTypesMsg.one:type_name -> OneOfs
	0, // 5: EmbeddedMsg.enumField:type_name -> EmbeddedEnum
	3, // 6: OneOfs.msgField:type_name -> EmbeddedMsg
	6, // 7: OneOfs.structField:type_name -> google.protobuf.Struct
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() {
	file_transfer_manager_go_pkg_parsers_registry_protobuf_protoparser_gotest_prototest_std_data_types_proto_init()
}
func file_transfer_manager_go_pkg_parsers_registry_protobuf_protoparser_gotest_prototest_std_data_types_proto_init() {
	if File_transfer_manager_go_pkg_parsers_registry_protobuf_protoparser_gotest_prototest_std_data_types_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_transfer_manager_go_pkg_parsers_registry_protobuf_protoparser_gotest_prototest_std_data_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StdDataTypesMsgList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transfer_manager_go_pkg_parsers_registry_protobuf_protoparser_gotest_prototest_std_data_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StdDataTypesMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transfer_manager_go_pkg_parsers_registry_protobuf_protoparser_gotest_prototest_std_data_types_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmbeddedMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transfer_manager_go_pkg_parsers_registry_protobuf_protoparser_gotest_prototest_std_data_types_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OneOfs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_transfer_manager_go_pkg_parsers_registry_protobuf_protoparser_gotest_prototest_std_data_types_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_transfer_manager_go_pkg_parsers_registry_protobuf_protoparser_gotest_prototest_std_data_types_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*OneOfs_DoubleField)(nil),
		(*OneOfs_FloatField)(nil),
		(*OneOfs_Int32Field)(nil),
		(*OneOfs_Int64Field)(nil),
		(*OneOfs_Uint32Field)(nil),
		(*OneOfs_Uint64Field)(nil),
		(*OneOfs_Sint32Field)(nil),
		(*OneOfs_Sint64Field)(nil),
		(*OneOfs_Fixed32Field)(nil),
		(*OneOfs_Fixed64Field)(nil),
		(*OneOfs_Sfixed32Field)(nil),
		(*OneOfs_Sfixed64Field)(nil),
		(*OneOfs_BoolField)(nil),
		(*OneOfs_StringField)(nil),
		(*OneOfs_BytesField)(nil),
		(*OneOfs_MsgField)(nil),
		(*OneOfs_StructField)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_transfer_manager_go_pkg_parsers_registry_protobuf_protoparser_gotest_prototest_std_data_types_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_transfer_manager_go_pkg_parsers_registry_protobuf_protoparser_gotest_prototest_std_data_types_proto_goTypes,
		DependencyIndexes: file_transfer_manager_go_pkg_parsers_registry_protobuf_protoparser_gotest_prototest_std_data_types_proto_depIdxs,
		EnumInfos:         file_transfer_manager_go_pkg_parsers_registry_protobuf_protoparser_gotest_prototest_std_data_types_proto_enumTypes,
		MessageInfos:      file_transfer_manager_go_pkg_parsers_registry_protobuf_protoparser_gotest_prototest_std_data_types_proto_msgTypes,
	}.Build()
	File_transfer_manager_go_pkg_parsers_registry_protobuf_protoparser_gotest_prototest_std_data_types_proto = out.File
	file_transfer_manager_go_pkg_parsers_registry_protobuf_protoparser_gotest_prototest_std_data_types_proto_rawDesc = nil
	file_transfer_manager_go_pkg_parsers_registry_protobuf_protoparser_gotest_prototest_std_data_types_proto_goTypes = nil
	file_transfer_manager_go_pkg_parsers_registry_protobuf_protoparser_gotest_prototest_std_data_types_proto_depIdxs = nil
}
